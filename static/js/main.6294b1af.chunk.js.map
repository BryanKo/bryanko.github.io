{"version":3,"sources":["img/lmLogo.png","img/ucscBackground.jpg","img/profilePic.jpg","serviceWorker.js","components/IntroBanner/IntroBanner.js","components/ProfiePicture/ProfilePicture.js","components/ProfileDesc/ProfileDesc.js","components/ProjectExp/ProjectExp.js","components/WorkExp/WorkExp.js","components/TechSkill/TechSkill.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","IntroBanner","image","min","max","className","y","style","backgroundImage","ProfilePicture","src","alt","ProfileDesc","ProjectExp","animate","date","iconStyle","background","color","LMLogo","WorkExp","icon","Work","TechSkill","Col","App","IntroImg","Container","Row","xs","md","profileImg","root","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6294b1af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lmLogo.263867d6.png\";","module.exports = __webpack_public_path__ + \"static/media/ucscBackground.f755a7d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profilePic.b9eca761.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './IntroBanner.css';\n\nimport { Parallax } from 'react-scroll-parallax';\n\nconst IntroBanner = ({ image, min, max }) => (\n\t<div className=\"intro-container\">\n\t\t<Parallax y={[min, max]}>\n\t\t\t<div\n\t\t\t\tclassName=\"parallax-img\"\n\t\t\t\tstyle={{ backgroundImage: `url(${image})`  }}\n\t\t\t/>\n\t\t</Parallax>\n\t</div>\n);\n\nexport default IntroBanner;","import React from 'react';\nimport './ProfilePicture.css';\n\nconst ProfilePicture = ({ image }) => (\n  <img className=\"profile-circle\" src={image} alt=\"its me!\" />\n);\n\nexport default ProfilePicture;","import React from 'react';\nimport './ProfileDesc.css';\n\nconst ProfileDesc = () => (\n  <div className=\"profile-desc\">\n    <h2>Bryan Ko</h2>\n    <h3>Software Engineer Asc at Lockheed Martin</h3>\n    <h4>I am a software engineer that loves to travel and eat food!</h4>\n  </div>\n);\n\nexport default ProfileDesc;","import React from 'react';\nimport './ProjectExp.css';\nimport LMLogo from './../../img/lmLogo.png';\n\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n\nconst ProjectExp = () => {\n  return (\n    <div>\n      <h1 className=\"center-timeline\">Projects</h1>\n      <VerticalTimeline\n        animate={true}\n      >\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"Febuary 2019 - Present\"\n          iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n        >\n          <h3 className=\"vertical-timeline-element-title\">Lockheed Martin</h3>\n          <h4 className=\"vertical-timeline-element-subtitle\">Software Engineer Asc</h4>\n          <div>\n            <img className=\"fit-img\" src={LMLogo} alt=\"LMLogo\" />\n            <p>Description about Lockheed Martin</p>\n          </div>\n\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"December 2016 - January 2017\"\n          iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n        >\n          <h3 className=\"vertical-timeline-element-title\">Bluejay Mobile Health</h3>\n          <h4 className=\"vertical-timeline-element-subtitle\">Software Engineer Intern</h4>\n          <p>\n            Description about Bluejay Mobile Health\n        </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"August 2016 - Septemer 2016\"\n          iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n        >\n          <h3 className=\"vertical-timeline-element-title\">Bluejay Mobile Health</h3>\n          <h4 className=\"vertical-timeline-element-subtitle\">QA Engineer Intern</h4>\n          <p>\n            Description about Bluejay Mobile Health\n        </p>\n        </VerticalTimelineElement>\n      </VerticalTimeline>\n    </div>\n\n  )\n};\n\nexport default ProjectExp;","import React from 'react';\nimport './WorkExp.css';\nimport LMLogo from './../../img/lmLogo.png';\nimport { Work } from '@material-ui/icons/';\n\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n// import faBriefcase from '@fortawesome/fontawesome-free'\n\n\nconst WorkExp = () => {\n  return (\n    <div>\n      <h1 className=\"center-timeline\">Work Experience</h1>\n      <VerticalTimeline>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"Febuary 2019 - Present\"\n          iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n          icon={<Work />}\n        >\n          <h3 className=\"vertical-timeline-element-title\">Lockheed Martin</h3>\n          <h4 className=\"vertical-timeline-element-subtitle\">Software Engineer Asc</h4>\n          <div>\n            <img className=\"fit-img\" src={LMLogo} alt=\"LMLogo\" />\n            <p>Description about Lockheed Martin</p>\n          </div>\n\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"December 2016 - January 2017\"\n          iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n          icon={<Work />}\n        >\n          <h3 className=\"vertical-timeline-element-title\">Bluejay Mobile Health</h3>\n          <h4 className=\"vertical-timeline-element-subtitle\">Software Engineer Intern</h4>\n          <p>\n            Description about Bluejay Mobile Health\n        </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"August 2016 - Septemer 2016\"\n          iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n          icon={<Work />}\n        >\n          <h3 className=\"vertical-timeline-element-title\">Bluejay Mobile Health</h3>\n          <h4 className=\"vertical-timeline-element-subtitle\">QA Engineer Intern</h4>\n          <p>\n            Description about Bluejay Mobile Health\n        </p>\n        </VerticalTimelineElement>\n      </VerticalTimeline>\n    </div>\n  )\n};\n\nexport default WorkExp;","import React from 'react';\nimport './TechSkill.css';\n\nimport { Col } from 'react-bootstrap';\n\nconst TechSkill = () => (\n  <div className=\"tech-section\">\n    <Col>\n      help\n    </Col>\n  </div>\n);\n\nexport default TechSkill;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport IntroImg from './img/ucscBackground.jpg';\nimport profileImg from './img/profilePic.jpg';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport IntroBanner from './components/IntroBanner/IntroBanner';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport ProfilePicture from './components/ProfiePicture/ProfilePicture';\nimport ProfileDesc from './components/ProfileDesc/ProfileDesc';\nimport ProjectExp from './components/ProjectExp/ProjectExp';\nimport WorkExp from './components/WorkExp/WorkExp';\nimport TechSkill from './components/TechSkill/TechSkill';\n\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div>\n        <ParallaxProvider>\n          <IntroBanner\n            min={'-30%'}\n            max={'0%'}\n            image={IntroImg}\n          />\n          <Container>\n            <Row className=\"center-profile\">\n              <Col xs={12} md={4}>\n                <ProfilePicture image={profileImg} />\n              </Col>\n              <Col xs={12} md={8} className=\"profile-box\">\n                <ProfileDesc />\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={12}>\n                <WorkExp />\n              </Col>\n              <Row>\n                <TechSkill />\n              </Row>\n            </Row>\n\n            <ProjectExp />\n          </Container>\n        </ParallaxProvider>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App.js';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}